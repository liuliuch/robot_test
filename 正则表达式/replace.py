import re'''我们还能通过正则表达式匹配上一些形式的字符串然后再替代掉这些字符串. 使用这种匹配 re.sub(), 将会比 python 自带的 string.replace() 要灵活多变.'''print(re.sub(r"r[au]ns", "catches", "dog runs to rans"))    #dog catches to catches# ps：此处是匹配全部print(re.sub(r"r[au]ns", "catches", "dog runs to rans to rans",count=2))    #dog catches to catches#count是匹配的个数。默认0是全部。'''字符串的分割功能'''string="""a;b,c.d\ef"""print(re.split(r"[,;.\n\\]",string))             # ['a', 'b', 'c', 'd', 'e']#ps: \需要转义#compile'''最后, 我们还能使用 compile 过后的正则, 来对这个正则重复使用. 先将正则 compile 进一个变量, 比如 compiled_re,  然后直接使用这个 compiled_re 来搜索.'''compiled_re = re.compile(r"r[ua]n")print(compiled_re.search("dog ran to cat"))  # <_sre.SRE_Match object; span=(4, 7), match='ran'>compiled_re2 =re.compile(r"r[ua]n")print(compiled_re2.findall("dog ran to run"))